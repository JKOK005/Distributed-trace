// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package message

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingMsg struct {
	HostAddr             string   `protobuf:"bytes,1,opt,name=hostAddr,proto3" json:"hostAddr,omitempty"`
	MsgTimeNano          uint32   `protobuf:"varint,2,opt,name=msgTimeNano,proto3" json:"msgTimeNano,omitempty"`
	SeedNodeAddr         string   `protobuf:"bytes,3,opt,name=seedNodeAddr,proto3" json:"seedNodeAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMsg) Reset()         { *m = PingMsg{} }
func (m *PingMsg) String() string { return proto.CompactTextString(m) }
func (*PingMsg) ProtoMessage()    {}
func (*PingMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

func (m *PingMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMsg.Unmarshal(m, b)
}
func (m *PingMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMsg.Marshal(b, m, deterministic)
}
func (m *PingMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMsg.Merge(m, src)
}
func (m *PingMsg) XXX_Size() int {
	return xxx_messageInfo_PingMsg.Size(m)
}
func (m *PingMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PingMsg proto.InternalMessageInfo

func (m *PingMsg) GetHostAddr() string {
	if m != nil {
		return m.HostAddr
	}
	return ""
}

func (m *PingMsg) GetMsgTimeNano() uint32 {
	if m != nil {
		return m.MsgTimeNano
	}
	return 0
}

func (m *PingMsg) GetSeedNodeAddr() string {
	if m != nil {
		return m.SeedNodeAddr
	}
	return ""
}

type PingMsgResp struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMsgResp) Reset()         { *m = PingMsgResp{} }
func (m *PingMsgResp) String() string { return proto.CompactTextString(m) }
func (*PingMsgResp) ProtoMessage()    {}
func (*PingMsgResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{1}
}

func (m *PingMsgResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMsgResp.Unmarshal(m, b)
}
func (m *PingMsgResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMsgResp.Marshal(b, m, deterministic)
}
func (m *PingMsgResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMsgResp.Merge(m, src)
}
func (m *PingMsgResp) XXX_Size() int {
	return xxx_messageInfo_PingMsgResp.Size(m)
}
func (m *PingMsgResp) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMsgResp.DiscardUnknown(m)
}

var xxx_messageInfo_PingMsgResp proto.InternalMessageInfo

func (m *PingMsgResp) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

type TraceReport struct {
	FromHostAddr          string   `protobuf:"bytes,1,opt,name=fromHostAddr,proto3" json:"fromHostAddr,omitempty"`
	FromHostMsgTimeNano   uint32   `protobuf:"varint,2,opt,name=fromHostMsgTimeNano,proto3" json:"fromHostMsgTimeNano,omitempty"`
	ToHostAddr            string   `protobuf:"bytes,3,opt,name=toHostAddr,proto3" json:"toHostAddr,omitempty"`
	ToHostMsgTimeNano     uint32   `protobuf:"varint,4,opt,name=toHostMsgTimeNano,proto3" json:"toHostMsgTimeNano,omitempty"`
	SeedNodeAddr          string   `protobuf:"bytes,5,opt,name=seedNodeAddr,proto3" json:"seedNodeAddr,omitempty"`
	IsTransmissionSuccess bool     `protobuf:"varint,6,opt,name=isTransmissionSuccess,proto3" json:"isTransmissionSuccess,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *TraceReport) Reset()         { *m = TraceReport{} }
func (m *TraceReport) String() string { return proto.CompactTextString(m) }
func (*TraceReport) ProtoMessage()    {}
func (*TraceReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{2}
}

func (m *TraceReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceReport.Unmarshal(m, b)
}
func (m *TraceReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceReport.Marshal(b, m, deterministic)
}
func (m *TraceReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceReport.Merge(m, src)
}
func (m *TraceReport) XXX_Size() int {
	return xxx_messageInfo_TraceReport.Size(m)
}
func (m *TraceReport) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceReport.DiscardUnknown(m)
}

var xxx_messageInfo_TraceReport proto.InternalMessageInfo

func (m *TraceReport) GetFromHostAddr() string {
	if m != nil {
		return m.FromHostAddr
	}
	return ""
}

func (m *TraceReport) GetFromHostMsgTimeNano() uint32 {
	if m != nil {
		return m.FromHostMsgTimeNano
	}
	return 0
}

func (m *TraceReport) GetToHostAddr() string {
	if m != nil {
		return m.ToHostAddr
	}
	return ""
}

func (m *TraceReport) GetToHostMsgTimeNano() uint32 {
	if m != nil {
		return m.ToHostMsgTimeNano
	}
	return 0
}

func (m *TraceReport) GetSeedNodeAddr() string {
	if m != nil {
		return m.SeedNodeAddr
	}
	return ""
}

func (m *TraceReport) GetIsTransmissionSuccess() bool {
	if m != nil {
		return m.IsTransmissionSuccess
	}
	return false
}

type TraceReportResp struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TraceReportResp) Reset()         { *m = TraceReportResp{} }
func (m *TraceReportResp) String() string { return proto.CompactTextString(m) }
func (*TraceReportResp) ProtoMessage()    {}
func (*TraceReportResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{3}
}

func (m *TraceReportResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceReportResp.Unmarshal(m, b)
}
func (m *TraceReportResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceReportResp.Marshal(b, m, deterministic)
}
func (m *TraceReportResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceReportResp.Merge(m, src)
}
func (m *TraceReportResp) XXX_Size() int {
	return xxx_messageInfo_TraceReportResp.Size(m)
}
func (m *TraceReportResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceReportResp.DiscardUnknown(m)
}

var xxx_messageInfo_TraceReportResp proto.InternalMessageInfo

func (m *TraceReportResp) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

func init() {
	proto.RegisterType((*PingMsg)(nil), "message.PingMsg")
	proto.RegisterType((*PingMsgResp)(nil), "message.PingMsgResp")
	proto.RegisterType((*TraceReport)(nil), "message.TraceReport")
	proto.RegisterType((*TraceReportResp)(nil), "message.TraceReportResp")
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_4dc296cbfe5ffcd5) }

var fileDescriptor_4dc296cbfe5ffcd5 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0x4f, 0x4f, 0xfa, 0x40,
	0x10, 0x4d, 0xf9, 0xfd, 0xe4, 0xcf, 0x20, 0xa2, 0xa3, 0x26, 0x84, 0x18, 0x43, 0x7a, 0x22, 0xd1,
	0xa0, 0x41, 0xbf, 0x00, 0xe1, 0xe2, 0x05, 0x62, 0x0a, 0x89, 0xe7, 0xda, 0x8e, 0x65, 0x43, 0xda,
	0x6d, 0x76, 0x56, 0xbf, 0x04, 0x5f, 0xda, 0xec, 0xb6, 0x40, 0x6b, 0x9b, 0x78, 0xf0, 0xf8, 0xde,
	0xec, 0xbe, 0xf7, 0xf6, 0xcd, 0xc2, 0x59, 0x4c, 0xcc, 0x7e, 0x44, 0x3c, 0x49, 0x95, 0xd4, 0x12,
	0x5b, 0x39, 0x76, 0xb7, 0xd0, 0x7a, 0x15, 0x49, 0xb4, 0xe0, 0x08, 0x87, 0xd0, 0xde, 0x48, 0xd6,
	0xb3, 0x30, 0x54, 0x03, 0x67, 0xe4, 0x8c, 0x3b, 0xde, 0x01, 0xe3, 0x08, 0xba, 0x31, 0x47, 0x6b,
	0x11, 0xd3, 0xd2, 0x4f, 0xe4, 0xa0, 0x31, 0x72, 0xc6, 0x3d, 0xaf, 0x48, 0xa1, 0x0b, 0xa7, 0x4c,
	0x14, 0x2e, 0x65, 0x48, 0x56, 0xe1, 0x9f, 0x55, 0x28, 0x71, 0xee, 0x1d, 0x74, 0x73, 0x33, 0x8f,
	0x38, 0xc5, 0x1b, 0xe8, 0x08, 0x5e, 0x7d, 0x06, 0x01, 0x31, 0x5b, 0xc7, 0xb6, 0x77, 0x24, 0xdc,
	0x5d, 0x03, 0xba, 0x6b, 0xe5, 0x07, 0xe4, 0x51, 0x2a, 0x95, 0x36, 0x06, 0x1f, 0x4a, 0xc6, 0x2f,
	0xe5, 0x88, 0x25, 0x0e, 0x1f, 0xe1, 0x72, 0x8f, 0x17, 0x95, 0xb8, 0x75, 0x23, 0xbc, 0x05, 0xd0,
	0xf2, 0xa0, 0x99, 0x85, 0x2e, 0x30, 0x78, 0x0f, 0x17, 0x19, 0x2a, 0xea, 0xfd, 0xb7, 0x7a, 0xd5,
	0x41, 0xa5, 0x84, 0x93, 0x6a, 0x09, 0xf8, 0x0c, 0xd7, 0x82, 0xd7, 0xca, 0x4f, 0x38, 0x16, 0xcc,
	0x42, 0x26, 0xfb, 0x06, 0x9a, 0xb6, 0x81, 0xfa, 0xa1, 0xfb, 0x00, 0xfd, 0x42, 0x19, 0xbf, 0xd7,
	0x37, 0x9d, 0x43, 0xef, 0x4d, 0xaa, 0x2d, 0xa9, 0x15, 0xa9, 0x2f, 0x11, 0x10, 0x4e, 0xa1, 0x6d,
	0xca, 0x37, 0x39, 0xf0, 0x7c, 0x92, 0xef, 0x7f, 0x92, 0xef, 0x63, 0x78, 0xf5, 0x93, 0x31, 0x16,
	0xd3, 0x9d, 0x03, 0x98, 0xa7, 0xd1, 0xfa, 0x4f, 0x52, 0x38, 0x83, 0x7e, 0x96, 0xdd, 0xdc, 0x9a,
	0x6f, 0x28, 0xd8, 0xe2, 0xf1, 0x60, 0xe1, 0x69, 0xc3, 0x41, 0x1d, 0x6b, 0x24, 0xde, 0x9b, 0xf6,
	0xef, 0x3e, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x5e, 0xfd, 0x17, 0xcd, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkerServiceClient is the client API for WorkerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkerServiceClient interface {
	PingNode(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingMsgResp, error)
}

type workerServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkerServiceClient(cc *grpc.ClientConn) WorkerServiceClient {
	return &workerServiceClient{cc}
}

func (c *workerServiceClient) PingNode(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingMsgResp, error) {
	out := new(PingMsgResp)
	err := c.cc.Invoke(ctx, "/message.WorkerService/PingNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkerServiceServer is the server API for WorkerService service.
type WorkerServiceServer interface {
	PingNode(context.Context, *PingMsg) (*PingMsgResp, error)
}

// UnimplementedWorkerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkerServiceServer struct {
}

func (*UnimplementedWorkerServiceServer) PingNode(ctx context.Context, req *PingMsg) (*PingMsgResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingNode not implemented")
}

func RegisterWorkerServiceServer(s *grpc.Server, srv WorkerServiceServer) {
	s.RegisterService(&_WorkerService_serviceDesc, srv)
}

func _WorkerService_PingNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServiceServer).PingNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.WorkerService/PingNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServiceServer).PingNode(ctx, req.(*PingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.WorkerService",
	HandlerType: (*WorkerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PingNode",
			Handler:    _WorkerService_PingNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messages.proto",
}

// TransmitterServiceClient is the client API for TransmitterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransmitterServiceClient interface {
	PingNode(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingMsgResp, error)
	ReportNodeCheck(ctx context.Context, in *TraceReport, opts ...grpc.CallOption) (*TraceReportResp, error)
}

type transmitterServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransmitterServiceClient(cc *grpc.ClientConn) TransmitterServiceClient {
	return &transmitterServiceClient{cc}
}

func (c *transmitterServiceClient) PingNode(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingMsgResp, error) {
	out := new(PingMsgResp)
	err := c.cc.Invoke(ctx, "/message.TransmitterService/PingNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transmitterServiceClient) ReportNodeCheck(ctx context.Context, in *TraceReport, opts ...grpc.CallOption) (*TraceReportResp, error) {
	out := new(TraceReportResp)
	err := c.cc.Invoke(ctx, "/message.TransmitterService/ReportNodeCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransmitterServiceServer is the server API for TransmitterService service.
type TransmitterServiceServer interface {
	PingNode(context.Context, *PingMsg) (*PingMsgResp, error)
	ReportNodeCheck(context.Context, *TraceReport) (*TraceReportResp, error)
}

// UnimplementedTransmitterServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTransmitterServiceServer struct {
}

func (*UnimplementedTransmitterServiceServer) PingNode(ctx context.Context, req *PingMsg) (*PingMsgResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingNode not implemented")
}
func (*UnimplementedTransmitterServiceServer) ReportNodeCheck(ctx context.Context, req *TraceReport) (*TraceReportResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportNodeCheck not implemented")
}

func RegisterTransmitterServiceServer(s *grpc.Server, srv TransmitterServiceServer) {
	s.RegisterService(&_TransmitterService_serviceDesc, srv)
}

func _TransmitterService_PingNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransmitterServiceServer).PingNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.TransmitterService/PingNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransmitterServiceServer).PingNode(ctx, req.(*PingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransmitterService_ReportNodeCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TraceReport)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransmitterServiceServer).ReportNodeCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/message.TransmitterService/ReportNodeCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransmitterServiceServer).ReportNodeCheck(ctx, req.(*TraceReport))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransmitterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "message.TransmitterService",
	HandlerType: (*TransmitterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PingNode",
			Handler:    _TransmitterService_PingNode_Handler,
		},
		{
			MethodName: "ReportNodeCheck",
			Handler:    _TransmitterService_ReportNodeCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "messages.proto",
}
