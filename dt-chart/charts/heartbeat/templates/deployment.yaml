{{ range $node := .Values.nodes}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-{{ $node }}
  labels:
    target.worker.node: {{ $node }}
spec:
  replicas: {{ $.Values.deployment.replicaCount }}
  selector:
    matchLabels:
      target.worker.node: {{ $node }}
  template:
    metadata:
      labels:
        target.worker.node: {{ $node }}
    spec:
      containers:
        - name: {{ $.Chart.Name }}-{{ $node }}
          image: {{ $.Values.deployment.repository }}:{{ $.Values.deployment.tag }}
          imagePullPolicy: {{ $.Values.deployment.pullPolicy }}
          env:
            {{- range $each := $.Values.deployment.env }}
            - name:   {{ $each.name }}
              value:  "{{ $each.value }}"
            {{- end }}
            - name:   REGISTER_PUBLIC_DNS
              value:  "service-{{ $node }}.{{ $.Release.Namespace }}.svc.cluster.local"
            - name:   SERVERS_ZK
              value:  "service-zookeeper.{{ $.Release.Namespace }}.svc.cluster.local:2181"
            - name:   KAFKA_BOOTSTRAP_SERVERS
              value:  "service-kafka.{{ $.Release.Namespace }}.svc.cluster.local:9092"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
---
{{ end }}